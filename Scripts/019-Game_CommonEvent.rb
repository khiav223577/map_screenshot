#==============================================================================
# ■ Game_CommonEvent
#------------------------------------------------------------------------------
# 處理共通事件的類別。包含執行平行事件的功能。
# 使用在 Game_Map ($game_map) 類別的內部。
#==============================================================================

class Game_CommonEvent
  #--------------------------------------------------------------------------
  # ● 初始目標
  #     common_event_id : 共通事件 ID
  #--------------------------------------------------------------------------
  def initialize(common_event_id)
    @common_event_id = common_event_id
    @interpreter = nil
    refresh
  end
  #--------------------------------------------------------------------------
  # ● 取得名稱
  #--------------------------------------------------------------------------
  def name
    return $data_common_events[@common_event_id].name
  end
  #--------------------------------------------------------------------------
  # ● 取得目標
  #--------------------------------------------------------------------------
  def trigger
    return $data_common_events[@common_event_id].trigger
  end
  #--------------------------------------------------------------------------
  # ● 取得條件開關 ID
  #--------------------------------------------------------------------------
  def switch_id
    return $data_common_events[@common_event_id].switch_id
  end
  #--------------------------------------------------------------------------
  # ● 取得執行內容
  #--------------------------------------------------------------------------
  def list
    return $data_common_events[@common_event_id].list
  end
  #--------------------------------------------------------------------------
  # ● 更新
  #--------------------------------------------------------------------------
  def refresh
    # 如果有需要的話為平行事件建立一個編譯器
    if self.trigger == 2 and $game_switches[self.switch_id] == true
      if @interpreter == nil
        @interpreter = Interpreter.new
      end
    else
      @interpreter = nil
    end
  end
  #--------------------------------------------------------------------------
  # ● 更新畫面
  #--------------------------------------------------------------------------
  def update
    # 平行處理有效的情況下
    if @interpreter != nil
      # 如果不是在執行中就設定
      unless @interpreter.running?
        @interpreter.setup(self.list, 0)
      end
      # 更新編譯器
      @interpreter.update
    end
  end
end
